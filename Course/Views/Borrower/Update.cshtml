@model Course.Models.ЗаёмщикАдрес

@{
    Layout = null;
}

<html>
<head>
    <meta charset="UTF-8">
    <title>Index</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" />
    <style>
        .inp-form {
            width: 50%;
            margin: 0 auto;
            padding-top: 20px;
        }
    </style>
</head>
<body>
    <div class="inp-form shadow rounded">
        @using (Html.BeginForm())
        {
        <fieldset>
            <legend>Редактировать заёмщика</legend>
            <div class="editor-field">
                @Html.HiddenFor(model => model.заёмщик.ИД_Заёмщика)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Имя)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Имя, new { htmlAttributes = new { @onkeyup = "check();", @id = "f1", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Фамилия)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Фамилия, new { htmlAttributes = new { @onkeyup = "check();", @id = "f2", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Отчество)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Отчество, new { htmlAttributes = new { @onkeyup = "check();", @id = "f3", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Телефон)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Телефон, new { htmlAttributes = new { @onkeyup = "check();", @id = "f4", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Возраст)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Возраст, new { htmlAttributes = new { @onkeyup = "check();", @id = "f5", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Средняя_ЗП)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Средняя_ЗП, new { htmlAttributes = new { @onkeyup = "check();", @id = "f6", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Номер_Паспорта)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Номер_Паспорта, new { htmlAttributes = new { @onkeyup = "check();", @id = "f7", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Серия_Паспорта)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Серия_Паспорта, new { htmlAttributes = new { @onkeyup = "check();", @id = "f8", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Кем_Выдан_Паспорт)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Кем_Выдан_Паспорт, new { htmlAttributes = new { @onkeyup = "check();", @id = "f9", @class = "form-control" }, })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.Дата_Выдачи)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.заёмщик.Дата_Выдачи, new { htmlAttributes = new { @onchange = "check();", @id = "f10", @class = "form-control", @type = "date" }, })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.заёмщик.ИД_Кредитной_Истории)
            </div>
            <div class="editor-label">
                @Html.DropDownListFor(x => x.заёмщик.ИД_Кредитной_Истории, (IEnumerable<SelectListItem>)ViewBag.HistoryDrop, new { @onchange = "check();", @id = "f10", @class = "form-control" })
            </div>
            <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
                Добавить адрес
            </button>


            <!-- Модальное окно -->
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title" id="myModalLabel">Введите адрес</h4>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="editor-field">
                                @Html.HiddenFor(model => model.адрес.ИД_Адреса)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.адрес.Город)
                            </div>
                            <div class="editor-label">
                                @Html.EditorFor(model => model.адрес.Город, new { htmlAttributes = new { @onkeyup = "check();", @id = "f11", @class = "form-control" }, })
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.адрес.Улица)
                            </div>
                            <div class="editor-label">
                                @Html.EditorFor(model => model.адрес.Улица, new { htmlAttributes = new { @onkeyup = "check();", @id = "f12", @class = "form-control" }, })
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.адрес.Номер_Улицы)
                            </div>
                            <div class="editor-label">
                                @Html.EditorFor(model => model.адрес.Номер_Улицы, new { htmlAttributes = new { @onkeyup = "check();", @id = "f13", @class = "form-control" }, })
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.адрес.Квартира)
                            </div>
                            <div class="editor-label">
                                @Html.EditorFor(model => model.адрес.Квартира, new { htmlAttributes = new { @onkeyup = "check();", @id = "f14", @class = "form-control" }, })
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.адрес.Индекс)
                            </div>
                            <div class="editor-label">
                                @Html.EditorFor(model => model.адрес.Индекс, new { htmlAttributes = new { @onkeyup = "check();", @id = "f15", @class = "form-control" }, })
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Ок</button>
                        </div>
                    </div>
                </div>
            </div>
            <p>
                <input type="submit" disabled id="createButton" value="Update" class="btn btn-primary" />
            </p>
        </fieldset>
        }
    </div>

    <a href="../Show" class="btn btn-info">Назад</a>


    <script>
        function check() {

            var pole1 = document.getElementById('f1'),
                pole2 = document.getElementById('f2'),
                pole3 = document.getElementById('f3'),
                pole4 = document.getElementById('f4'),
                pole5 = document.getElementById('f5'),
                pole6 = document.getElementById('f6'),
                pole7 = document.getElementById('f7'),
                pole8 = document.getElementById('f8'),
                pole9 = document.getElementById('f9'),
                pole10 = document.getElementById('f10'),
                pole11 = document.getElementById('f11'),
                pole12 = document.getElementById('f12'),
                pole13 = document.getElementById('f13'),
                pole14 = document.getElementById('f14'),
                pole15 = document.getElementById('f15');
                document.getElementById('createButton').disabled = pole1.value && pole2.value && pole3.value && pole4.value && pole5.value && pole6.value && pole7.value && pole8.value && pole9.value && pole10.value && pole11.value && pole12.value && pole13.value && pole14.value && pole15.value  ? false : "disabled";
        }
    </script>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
</body>
</html>
